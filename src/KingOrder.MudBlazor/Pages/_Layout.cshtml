@using Microsoft.AspNetCore.Components.Web
@namespace KingOrder.MudBlazor.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <style>
        #videos {
        position: relative;
        width: 100%;
        height: 100%;
        margin-left: auto;
        margin-right: auto;
        }

        #subscriber {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            z-index: 10;
        }

        #publisher {
            position: absolute;
            width: 360px;
            height: 240px;
            bottom: 10px;
            left: 10px;
            z-index: 100;
            border: 3px solid white;
            border-radius: 3px;
        }

        .OT_mirrored OT_root OT_publisher OT_fit-mode-cover{
            position: relative !important;
            width: 100% !important;
            height: 100% !important;
            margin-left: auto !important;
            margin-right: auto !important;
        }
    </style>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="https://static.opentok.com/v2/js/opentok.js"></script>

    <script>
        var session = null

        function customLog(message){
            console.log(message)
        }
        function startVonage(){
            console.log('starting vonage')

            var apiKey = 'YOUR_DATA_HERE';
            var sessionId = 'YOUR_DATA_HERE';
            var token = 'YOUR_DATA_HERE';
        
            session = OT.initSession(apiKey, sessionId);

            // create publisher
            var publisher = OT.initPublisher();
            session.connect(token, function(err) {
                console.log('error: ' + err)
            });

            session.publish(publisher);

            session.on('streamCreated', function (event) {
                console.log('streamCreated: ')
                session.subscribe(event.stream);
            });

            console.log('started vonage')
        }

        function stopVonage(){
            console.log('stoping vonage')

           session.forceDisconnect(connection, function (error) {
              if (error) {
                console.log(error);
              } else {
                console.log("Connection forced to disconnect: " + connection.id);
              }
            });
           
            console.log('stoped vonage')
        }
    </script>
</body>
</html>
